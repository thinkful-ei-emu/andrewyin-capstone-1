{"version":3,"sources":["config.js","services/token-service.js","components/Hamburger/HamburgerMenu.js","components/Character/CharacterThumbnail.js","services/characters-api-service.js","contexts/CharacterListContext.js","components/CharacterList/CharacterList.js","contexts/CharacterContext.js","components/Character/CharacterSheet.js","components/CharacterCreateForm/CharacterCreateForm.js","services/auth-api-service.js","components/Login/LoginForm.js","components/Login/LoginPage.js","components/NotFound/NotFoundPage.js","components/Utils/PublicOnlyRoute.js","components/Utils/PrivateRoute.js","components/Utils/LandingPageRoute.js","components/App/App.js","serviceWorker.js","index.js"],"names":["config","TokenService","saveAuthToken","token","window","localStorage","setItem","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","concat","openSideNav","document","getElementById","style","width","closeSideNav","Hamburger","props","react_default","a","createElement","Fragment","id","className","onClick","react_router_dom","to","CharacterThumbnail","this","charId","charName","charRace","charClass","React","Component","CharactersAPIService","getAllCharacters","_getAllCharacters","Object","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","headers","Authorization","sent","abrupt","ok","json","then","e","Promise","reject","stop","apply","arguments","getCharacterById","_getCharacterById","_callee2","_context2","_x","addCharacter","_addCharacter","_callee3","char","newCharacter","_context3","method","content-type","body","JSON","stringify","objectSpread","_x2","CharacterListContext","createContext","characters","error","setError","clearError","setCharactersList","CharacterListProvider","state","_this","setState","value","Provider","children","CharacterList","CharacterAPIService","context","console","t0","map","character","index","components_Character_CharacterThumbnail","key","charDesc","contextType","nullChar","CharacterContext","setChar","clearChar","CharacterProvider","CharacterSheet","match","params","CharacterCreateForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","resetFields","handleFormSubmit","preventDefault","target","cancelButtonClick","tabOptions","currentActive","onSubmit","htmlFor","type","name","AuthAPIService","postLogin","_postLogin","cred","postUser","_postUser","user","LoginForm","handleSubmitJWTAuth","_ref","event","_event$target","authToken","onLoginSuccess","required","defaultProps","LoginPage","_this$props","location","history","destination","from","push","Login_LoginForm","NotFoundPage","PublicOnlyRoute","component","objectWithoutProperties","react_router","assign","render","componentProps","PrivateRoute","pathname","LandingPageRoute","App","path","HamburgerMenu","exact","Boolean","hostname","ReactDOM","CharacterListContext_CharacterListProvider","CharacterContext_CharacterProvider","components_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59fc66a9.chunk.js","sourcesContent":["export default {\n  API_ENDPOINT: 'http://localhost:8080/api',\n  TOKEN_KEY: 'capstone-key'\n};","import config from '../config';\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token);\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY);\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY);\n  },\n  hasAuthToken() {\n    return TokenService.getAuthToken() ? true : false;\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`);\n  },\n};\n\nexport default TokenService;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport TokenService from '../../services/token-service';\nimport './HamburgerMenu.css';\n\nfunction openSideNav() {\n  document.getElementById('sideNav').style.width = '200px';\n}\n\nfunction closeSideNav() {\n  document.getElementById('sideNav').style.width = '0';\n}\n\nfunction Hamburger(props) {\n  return <>\n    <span id='navOpen' className='nav-open'>\n      <span className='hamburger' onClick={openSideNav}>\n        <div className='hamburger-bar'></div>\n        <div className='hamburger-bar'></div>\n        <div className='hamburger-bar'></div>\n      </span>\n    </span>\n    <nav id='sideNav' className='side-nav'>\n      <span className='nav-close' onClick={closeSideNav}>\n        <button id='closeBtn' className='closeBtn' >&times;</button>\n      </span>\n      <Link to={'/characters'}>\n        <button id='characters' className='nav-link' onClick={() => closeSideNav()}>Characters</button>\n      </Link>\n      <Link to={'/characters/create'}>\n        <button id='create' className='nav-link' onClick={() => closeSideNav()}>Create</button>\n      </Link>\n      <Link to={'/'}>\n        <button id='logout' className='nav-link' onClick={() => TokenService.clearAuthToken()}>Logout</button>\n      </Link>\n    </nav>\n  </>;\n}\n\nexport default Hamburger; ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './CharacterThumbnail.css';\n\nclass CharacterThumbnail extends React.Component {\n  render() {\n    return (\n      <li className=\"characterThumbnail\">\n        <Link to={`/characters/${this.props.charId}`}>\n          <p>{this.props.charName}</p>\n          <p>{this.props.charRace}</p>\n          <p>{this.props.charClass}</p>\n        </Link>\n      </li>\n    );\n  }\n}\n\nexport default CharacterThumbnail;\n","import config from '../config';\nimport TokenService from './token-service';\n\n\nconst CharactersAPIService = {\n  async getAllCharacters() {\n    const res = await fetch(`${config.API_ENDPOINT}/characters`, {\n      headers: {\n        'Authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    });\n\n    return (!res.ok)\n      ? res.json().then(e => Promise.reject(e))\n      : res.json();\n  },\n  async getCharacterById(id) {\n    const res = await fetch(`${config.API_ENDPOINT}/characters/${id}`, {\n      headers: {\n        'Authorization': `bearer ${TokenService.getAuthToken()}`\n      }\n    });\n\n    return (!res.ok)\n      ? res.json().then(e => Promise.reject(e))\n      : res.json();\n  },\n  async addCharacter(char) {\n    const res = await fetch(`${config.API_ENDPOINT}/characters/create`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `bearer ${TokenService.getAuthToken()}`\n      },\n      body: JSON.stringify({\n        ...char\n      })\n    });\n\n    const newCharacter = await res.json();\n\n    return newCharacter;\n  }\n};\n\nexport default CharactersAPIService;","import React from 'react';\n\nconst CharacterListContext = React.createContext({\n  characters: [],\n  error: null,\n  setError: () => { },\n  clearError: () => { },\n  setCharactersList: () => { }\n});\n\nclass CharacterListProvider extends React.Component {\n  state = {\n    characters: [],\n    error: null,\n  }\n\n  setCharactersList = characters => {\n    this.setState({ characters });\n  }\n\n  setError = error => {\n    this.setState({ error });\n  }\n\n  clearError = () => {\n    this.setState({ error: null });\n  }\n\n  render() {\n    const value = {\n      characters: this.state.characters,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setCharactersList: this.setCharactersList\n    };\n\n    return <CharacterListContext.Provider value={value}>\n      {this.props.children}\n    </CharacterListContext.Provider>;\n  }\n}\n\nexport default CharacterListContext;\n\nexport { CharacterListProvider };","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport CharacterThumbnail from '../Character/CharacterThumbnail';\nimport CharacterAPIService from '../../services/characters-api-service';\nimport CharacterListContext from '../../contexts/CharacterListContext';\nimport './CharacterList.css';\n\nclass CharacterList extends React.Component {\n\n  static contextType = CharacterListContext;\n\n  async componentDidMount() {\n    try {\n      const characters = await CharacterAPIService.getAllCharacters();\n      this.context.setCharactersList(characters);\n    }\n    catch (e) {\n      console.error(e);\n      this.context.setError(e);\n    }\n  }\n\n  render() {\n    const characters = this.context.characters.map((character, index) => {\n      return (\n        <CharacterThumbnail\n          key={index}\n          charId={character.charId}\n          charName={character.charName}\n          charRace={character.charRace}\n          charClass={character.charClass}\n          charDesc={character.charDesc}\n        />\n      );\n    });\n    return (\n      <ul className='characterList'>\n        {characters}\n      </ul>\n    );\n  }\n}\n\nexport default CharacterList;\n","import React from 'react';\n\nconst nullChar = {\n  charName: null,\n  charRace: null,\n  charClass: null,\n  charDesc: null\n};\n\nconst CharacterContext = React.createContext({\n  character: nullChar,\n  error: null,\n  setError: () => { },\n  clearError: () => { },\n  setChar: () => { },\n  clearChar: () => { }\n});   \n\nclass CharacterProvider extends React.Component {\n  state = {\n    character: nullChar,\n    error: null\n  }\n\n  setError = error => {\n    console.error(error);\n    this.setState({ error });\n  }\n\n  clearError = () => {\n    this.setState({ error: null });\n  }\n\n  setChar = character => {\n    this.setState({ character });\n  }\n\n  clearChar = () => {\n    this.setChar(nullChar);\n  }\n\n  render() {\n    const value = {\n      character: this.state.character,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setChar: this.setChar,\n      clearChar: this.clearChar\n    };\n\n    return (\n      <CharacterContext.Provider value={value}>\n        {this.props.children}\n      </CharacterContext.Provider>\n    );\n  }\n}\n\nexport default CharacterContext;\nexport { CharacterProvider };","import React from 'react';\n\nimport CharacterContext from '../../contexts/CharacterContext';\nimport CharacterAPIService from '../../services/characters-api-service';\n\nimport './CharacterSheet.css';\n\nclass CharacterSheet extends React.Component {\n  static contextType = CharacterContext;\n\n  async componentDidMount() {\n    try {\n      const charId = this.props.match.params.charId;\n      const character = await CharacterAPIService.getCharacterById(charId);\n      this.context.setChar(character);\n    }\n    catch (e) {\n      this.context.setError(e);\n    }\n  }\n\n  render() {\n    const character = this.context.character;\n    return (\n      <div className='characterSheet'>\n        <p id='charName'>{`Name: ${character.charName}`}</p>\n        <p id='charName'>{`Race: ${character.charRace}`}</p>\n        <p id='charName'>{`Class: ${character.charClass}`}</p>\n        <p id='charName'>{`Description: ${character.charDesc}`}</p>\n      </div>\n    );\n  }\n}\n\nexport default CharacterSheet;","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport CharactersAPIService from '../../services/characters-api-service';\nimport './CharacterCreateForm.css';\n\nclass CharacterCreateForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabOptions: [\n        'details',\n        'equipment',\n        'abilityScores',\n        'classFeatures',\n        'spellsList'\n      ],\n      currentActive: 'details'\n    };\n  }\n\n  addCharacter = (newCharacter) => {\n    CharactersAPIService.addCharacter(newCharacter);\n  }\n\n  resetFields = () => {\n    document.getElementById('charName').value = '';\n    document.getElementById('charRace').value = '';\n    document.getElementById('charClass').value = '';\n    document.getElementById('charDesc').value = '';\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    const charName = e.target.charName.value;\n    const charRace = e.target.charRace.value;\n    const charClass = e.target.charClass.value;\n    const charDesc = e.target.charDesc.value;\n\n    this.addCharacter({\n      charName,\n      charRace,\n      charClass,\n      charDesc\n    });\n\n    this.resetFields();\n  }\n\n  cancelButtonClick = (e) => {\n    this.resetFields();\n  }\n\n  render() {\n    return (\n      <form className='characterCreateForm'\n        onSubmit={this.handleFormSubmit}\n      >\n        <label htmlFor='charName'>Name: </label>\n        <input type='text' id='charName' name='charName'></input>\n        <br />\n        <label htmlFor='charRace'>Race: </label>\n        <input type='text' id='charRace' name='charRace'></input>\n        <br />\n        <label htmlFor='charClass'>Class: </label>\n        <input type='text' id='charClass' name='charClass'></input>\n        <br />\n        <label htmlFor='charDesc'>Description: </label>\n        <textarea id='charDesc' name='charDesc'></textarea>\n        <br />\n        <section className='submitSection'>\n          <button type='submit'>Submit</button>\n          <button type='button' onClick={this.cancelButtonClick}>Cancel</button>\n        </section>\n      </form>\n    );\n  }\n}\n\nexport default CharacterCreateForm;","import config from '../config';\n\nconst AuthAPIService = {\n  postLogin: async function (cred) {\n    const res = await fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(cred)\n    });\n\n    return (!res.ok)\n      ? res.json().then(e => Promise.reject(e))\n      : res.json();\n  },\n  postUser: async function (user) {\n    const res = await fetch(`${config.API_ENDPOINT}/users`,  {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n\n    return (!res.ok)\n      ? res.json().then(e => Promise.reject(e))\n      : res.json();\n  }\n};\n\nexport default AuthAPIService;","import React from 'react';\nimport TokenService from '../../services/token-service';\nimport AuthAPIService from '../../services/auth-api-service';\n\nclass LoginForm extends React.Component {\n  static defaultProps = {\n    onLoginSuccess: () => { }\n  }\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      error: null\n    };\n  }\n\n  handleSubmitJWTAuth = async (event) => {\n    event.preventDefault();\n    this.setState({ error: null });\n\n    const { userName, password } = event.target;\n\n    try {\n      const res = await AuthAPIService.postLogin({\n        userName: userName.value,\n        password: password.value\n      });\n\n      userName.value = '';\n      password.value = '';\n      TokenService.saveAuthToken(res.authToken);\n      this.props.onLoginSuccess();\n    }\n    catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form\n        className='loginForm'\n        onSubmit={this.handleSubmitJWTAuth}\n      >\n        <section className='errorSection'>\n          {error && <p className='red'>{error}</p>}\n        </section>\n\n        <label htmlFor='userName'>\n          Username:\n        </label>\n        <input required type='text' id='userName' name='userName'>\n        </input>\n\n        <br />\n\n        <label htmlFor='password'>\n          Password:\n        </label>\n        <input required type='password' id='password' name='password'>\n        </input>\n\n        <br />\n        <section className='buttonSection'>\n          <button className='loginButton' type='submit'>Login</button>\n          <input className='loginButton' type='reset' value='Clear'></input>\n        </section>\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;","import React from 'react';\nimport LoginForm from './LoginForm';\n\nimport './LoginPage.css';\n\nclass LoginPage extends React.Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => { }\n    }\n  }\n\n  onLoginSuccess = () => {\n    const { location, history } = this.props;\n    const destination = (location.state || {}).from || '/';\n    history.push(destination);\n  }\n\n  render() {\n    return (\n      <section className='loginPage'>\n        <fieldset>\n          <legend>\n            <h2>Login</h2>\n          </legend>\n          <LoginForm\n            onLoginSuccess={this.onLoginSuccess}\n          />\n        </fieldset>\n      </section>\n    );\n  }\n}\n\nexport default LoginPage;","import React from 'react';\n\nfunction NotFoundPage() {\n  return (\n    <section className='NotFoundPage'>\n      <h2>404 - Page Not Found</h2>\n    </section>\n  );\n}\n\nexport default NotFoundPage;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport TokenService from '../../services/token-service';\n\nexport default function PublicOnlyRoute({ component, ...props }) {\n  const Component = component;\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Redirect to={'/characters'} />\n          : <Component {...componentProps} />\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport TokenService from '../../services/token-service';\n\nexport default function PrivateRoute({ component, ...props }) {\n  const Component = component;\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Component {...componentProps} />\n          : <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: componentProps.location }\n            }}\n          />\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport TokenService from '../../services/token-service';\n\nexport default function LandingPageRoute(props) {\n  return (\n    <Route\n      {...props}\n      render={componentProps => (\n        TokenService.hasAuthToken()\n          ? <Redirect\n            to={{\n              pathname: '/characters',\n              state: { from: componentProps.location }\n            }}\n          />\n          : <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: componentProps.location }\n            }}\n          />\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n// import VoxMachina from '../../store';\n\nimport Header from '../Header/Header';\nimport HamburgerMenu from '../Hamburger/HamburgerMenu';\nimport CharacterList from '../CharacterList/CharacterList';\nimport CharacterSheet from '../Character/CharacterSheet';\nimport CharacterCreateForm from '../CharacterCreateForm/CharacterCreateForm';\n// import CharactersAPIService from '../../services/characters-api-service';\nimport LoginPage from '../Login/LoginPage';\nimport NotFoundPage from '../NotFound/NotFoundPage';\nimport PublicOnlyRoute from '../Utils/PublicOnlyRoute';\nimport PrivateRoute from '../Utils/PrivateRoute';\nimport LandingPageRoute from '../Utils/LandingPageRoute';\n\nclass App extends React.Component {\n  render() {\n    return <>\n      <Route\n        path='/characters'\n        component={HamburgerMenu}\n      />\n\n      <section className='app'>\n        <Switch>\n          <Route\n            exact\n            path={'/'}\n            component={LandingPageRoute}\n          />\n          <PublicOnlyRoute\n            exact\n            path={'/login'}\n            component={LoginPage}\n          />\n          <PrivateRoute\n            exact\n            path={'/characters'}\n            component={CharacterList}\n          />\n          <PrivateRoute\n            exact\n            path={'/characters/create'}\n            component={CharacterCreateForm}\n          />\n          <PrivateRoute\n            path={'/characters/:charId'}\n            component={CharacterSheet}\n          />\n          <Route\n            component={NotFoundPage}\n          />\n        </Switch>\n      </section>\n    </>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { CharacterListProvider } from './contexts/CharacterListContext';\nimport { CharacterProvider } from './contexts/CharacterContext';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <CharacterListProvider>\n      <CharacterProvider>\n        <App />\n      </CharacterProvider>\n    </CharacterListProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}